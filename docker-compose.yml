version: '3.8'

services:
  student-dss:
    build:
      context: .
      dockerfile: Dockerfile.nginx
    container_name: student-dss
    ports:
      - "80:80"  # This is expecting to serve NGINX on port 80
    volumes:
      - ./public:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./data:/app/data  # Mount the data directory for SQLite persistence
    networks:
      - student-dss-network
    restart: always
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80"]
      interval: 10s
      timeout: 5s
      retries: 3

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: student-dss-api
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
      - /app/node_modules  # This tells Docker to not sync this directory with host
      - ./data:/app/data  # Mount the data directory for SQLite persistence
    networks:
      - student-dss-network
    environment:
      - NODE_ENV=development
      - SQLITE_PATH=/app/data/studentDSS.db
      - PORT=3000
      - HOST=0.0.0.0
    restart: always
    command: npm run dev
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

  python-api:
    build:
      context: .
      dockerfile: Dockerfile.python
    container_name: student-dss-python-api
    ports:
      - "5000:5000"
    volumes:
      - ./:/app
      - ./data:/app/data  # Mount the data directory for SQLite persistence
    networks:
      - student-dss-network
    environment:
      - FLASK_APP=api/python/app.py
      - FLASK_ENV=development
      - PYTHONUNBUFFERED=1
      - SQLITE_PATH=/app/data/studentDSS.db
    restart: always
    depends_on:
      - api
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 10s
      timeout: 5s
      retries: 3

networks:
  student-dss-network:
    driver: bridge

volumes:
  api_node_modules:





