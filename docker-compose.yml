version: '3.8'

services:
  student-dss:
    build: .
    container_name: student-dss
    ports:
      - "8080:80"
    volumes:
      - ./:/usr/share/nginx/html
      - ./nginx.conf:/etc/nginx/conf.d/default.conf
      - ./.seed_completed:/app/.seed_completed
    depends_on:
      - postgres
    networks:
      - student-dss-network
    environment:
      - POSTGRES_URI=postgres://postgres:password@postgres:5432/studentDSS
    restart: always

  api:
    build:
      context: .
      dockerfile: Dockerfile.api
    container_name: student-dss-api
    ports:
      - "3000:3000"
    volumes:
      - ./:/app
      - /app/node_modules
      - ./.seed_completed:/app/.seed_completed
    depends_on:
      - postgres
    networks:
      - student-dss-network
    environment:
      - POSTGRES_URI=postgres://postgres:password@postgres:5432/studentDSS
      - NODE_ENV=development
    restart: always
    command: npm run dev

  postgres:
    image: postgres:14
    container_name: student-dss-postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./data/init-postgres.sql:/docker-entrypoint-initdb.d/init-postgres.sql:ro
    networks:
      - student-dss-network
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=password
      - POSTGRES_DB=studentDSS
    restart: always

networks:
  student-dss-network:
    driver: bridge

volumes:
  postgres-data:
      - ./:/app
      - /app/node_modules
      - ./.seed_completed:/app/.seed_completed
    depends_on:
      - postgres
    networks:
      - student-dss-network
    environment:
      - POSTGRES_URI=postgres://postgres:password@postgres:5432/studentDSS
      - NODE_ENV=development
    restart: "no"

networks:
  student-dss-network:
    driver: bridge

volumes:
  postgres-data:

